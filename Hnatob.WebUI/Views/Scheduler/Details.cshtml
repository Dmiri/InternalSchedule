@model Hnatob.Domain.Concrete.Event
@{ViewBag.Title = "Details";}


<div class="form-horizontal">
    <h4>Event</h4>
    <hr />
    <div class="form-row">
        <div class="col-md-7">
            @Html.DisplayNameFor(model => model.Access) -
            @Html.DisplayFor(model => model.Access)
            <div>
                @Html.DisplayNameFor(model => model.Location) -
                @Html.DisplayFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div>
                @Html.DisplayNameFor(model => model.Start) -
                @Html.DisplayFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div>
                @Html.DisplayNameFor(model => model.Duration) -
                @Html.DisplayFor(model => model.Duration)
            </div>

            <div>
                @Html.DisplayNameFor(model => model.EventType) -
                @Html.DisplayFor(model => model.EventType, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.Title } })
            </div>

            <div>
                @Html.DisplayNameFor(model => model.Title) -
                @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = @Model.Title } })
            </div>
            @if (!string.IsNullOrEmpty(Model.Description))
            {
            <div>
                @Html.DisplayNameFor(model => model.Description) -
                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            }
        </div>
        @*---------------------------------------------------------------------------------------------------------------------*@
        <div class="col-md-5">
            @Html.Label("Responsibles:", new { @class = "control-label" })
            @*--------------------------------------------------------------------------------------*@
            <div>
                @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label" }) -
                @Html.DisplayFor(model => model.Producer)
            </div>

            @*--------------------------------------------------------------------------------------*@
            @if (!string.IsNullOrEmpty(Model?.Conductor))
    {
        <div>
            @Html.LabelFor(model => model.Conductor, htmlAttributes: new { @class = "control-label" })
            @Html.DisplayFor(model => model.Conductor)
        </div>
}

        @*--------------------------------------------------------------------------------------*@
            @if (!string.IsNullOrEmpty(Model?.Choirmaster))
    {
        <div>
            @Html.LabelFor(model => model.Choirmaster, htmlAttributes: new { @class = "control-label" })
            @Html.DisplayFor(model => model.Choirmaster)
        </div>
}
        @*--------------------------------------------------------------------------------------*@
            @if (!string.IsNullOrEmpty(Model?.Accompanist))
    {
        <div>
            @Html.LabelFor(model => model.Accompanist, htmlAttributes: new { @class = "control-label" })
            @Html.DisplayFor(model => model.Accompanist)
        </div>
}


        @*--------------------------------------------------------------------------------------*@
            @if (!string.IsNullOrEmpty(Model?.LightingDesigner))
    {
        <div>
            @Html.LabelFor(model => model.LightingDesigner, htmlAttributes: new { @class = "control-label" })
            @Html.DisplayFor(model => model.LightingDesigner)
        </div>

}

        @*--------------------------------------------------------------------------------------*@
            @if (!string.IsNullOrEmpty(Model?.SoundEngineer))
    {
        <div>
            @Html.LabelFor(model => model.SoundEngineer, htmlAttributes: new { @class = "control-label" })
            @Html.DisplayFor(model => model.SoundEngineer)
        </div>
}


        <label>Services: </label>
            @if (Model.Orchestra)
            {
            @Html.LabelFor(model => model.Orchestra, new { @class = "form-check-label" })
            }
            @if (Model.Choir)
            {
            @Html.LabelFor(model => model.Choir, new { @class = "form-check-label" })
            }
            @if (Model.Mimic)
            {
            @Html.LabelFor(model => model.Mimic, new { @class = "form-check-label" })
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Back to List", "Schedule", null, new { @class = "btn btn-default btn-dark" })
            @Html.ActionLink("Edit", "Edit", new { eventId = Model.Id }, new { @class = "btn btn-warning" })
        </div>
    </div>
</div>

<p>
</p>