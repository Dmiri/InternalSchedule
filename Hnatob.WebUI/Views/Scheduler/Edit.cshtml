@model Hnatob.Domain.Helper.Event
@using Hnatob.Domain.Helper

@{ViewBag.Title = "Edit";}


@using (Html.BeginForm( "Edit", "Scheduler",
    FormMethod.Post,
    new { enctype = "multipart/form-data"}))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Event</h4>
    <hr />
    <div class="form-row">
        <div class="col-md-7">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            @Html.HiddenFor(model => model.Access, new { value = Model.Access })
            <div class="btn-group btn-group-toggle btn-sm" data-toggle="buttons">
                <label class="btn btn-secondary active">
                    <input class=" btn btn-sm" type="radio" name=@Access.Private autocomplete="off">@Access.Private
                </label>
                <label class="btn btn-secondary">
                    <input class=" btn btn-sm" type="radio" name=@Access.Public autocomplete="off">@Access.Public
                </label>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
                <div class="dropdown btn-group">
                    @Html.EditorFor(model => model.EventType, new { htmlAttributes = new { @class = "form-control", placeholder = "Event's type" } })
                    <button type="button" class="btn btn-info btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only"> </span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        @foreach (var item in ViewBag.TypeEvent)
                        {
                            if (item != "")
                            {
                                <label class="dropdown-item">@item</label>
                            }
                        }

                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                <div class="dropdown btn-group">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title for event" } })
                    <button type="button" class="btn btn-info btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only"> </span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        @foreach (var item in ViewBag.TitleEvent)
                        {
                            <label class="dropdown-item">@item</label>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                <div class="dropdown btn-group">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", placeholder = "Event's location" } })
                    <button type="button" class="btn btn-info btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only"> </span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        @foreach (var item in ViewBag.Location)
                        {
                            <label class="dropdown-item">@item</label>
                        }
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })
                <input type="time" class="btn btn-info control-label" />
                @*<span class="validity"></span>*@
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })*@
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                <label>Description:</label>
                <textarea name="Description" class="form-control w-auto" rows="3"></textarea>
                @*@Html.TextAreaFor(model => model.Description, 3, 40, new { htmlAttributes = new { @class = "form-control" } })*@
            </div>
        </div>
        @*---------------------------------------------------------------------------------------------------------------------*@

        <div class="col-md-5">
            @Html.Label("Responsibles:")
            <div id="responsibles">
                <div id="list">
                    @Html.Partial("ResponsibleForEdit", Model.Responsibles)
                </div>
                <div>
                    <div class="row">
                        <div id="addrowresp" class="btn-group float-right">
                            <button class="form-control btn btn-sm btn-info">Add responsible</button>
                            <button class="btn btn-info dropdown-toggle dropdown-toggle-split"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="sr-only"> </span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                @foreach (var item in ViewBag.Positions)
                        {
                            <label class="dropdown-item" data-itemid="@item.Id.ToString()">@item.Name</label>
                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>




            @Html.Label("Services:")
            <div id="services">
                <div id="list">
                    @Html.Partial("CommentsToServicesForEdit", Model.CommentsToServices)
                </div>
                <div>
                    <div class="row">
                        <div id="addrowservice" class="btn-group float-right">
                            <button class="form-control btn btn-sm btn-info">Add service</button>
                            <button class="btn btn-info dropdown-toggle dropdown-toggle-split"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="sr-only"> </span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                @foreach (var item in ViewBag.Services)
                                {
                                <label class="dropdown-item" data-itemid="@item">@item</label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Back to List", "Schedule", null, new { @class = "btn btn-default btn-dark" })
            <input id="submit" type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>


}

@section Scripts {
    <script src="@Url.Content("~/Scripts/custom/edit-schedule.js")" type="text/javascript"></script>
}